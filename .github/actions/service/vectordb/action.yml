name: "milvus"
description: "stop, clean and start milvus in order"
inputs:
    stop:
        description: "whether to stop"
        required: true
    clean:
        description: "whether to clean"
        required: true
    start:
        description: "whether to start"
        required: true
    ports:
        description: "ports to run on"
        required: false
        default: "19530"
    Root-Dir-Path:
      description: "the path of IGinX root directory"
      required: false
      default: "${GITHUB_WORKSPACE}"

runs:
    using: "composite"
    steps:
        - if: fromJSON(inputs.stop) || fromJSON(inputs.clean)
          name: unimplemented
          shell: bash
          run: exit 1

        - name: Setup docker compose
          uses: ./.github/actions/docker-compose

        - if: fromJSON(inputs.start)
          name: Create Config for milvus docker compose
          shell: bash
          working-directory: ${{ github.workspace }}
          run: |
              pwd
              echo ${{ github.workspace }}
              for port in ${{ inputs.ports }}; do
                mkdir -p $port
                cp -f docker/milvus/docker-compose.yml $port/docker-compose-$port.yml
                sed -i"" -e "s/19530:19530/$port:19530/g" $port/docker-compose-$port.yml
                sed -i"" -e "s/\/volumes/\/home\/runner\/work\/test\/testvolumes$port/g" $port/docker-compose-$port.yml
                sed -i"" -e "s/name: milvus/name: milvus$port/g" $port/docker-compose-$port.yml
              done
              echo "docker-compose.yml created successfully"

        - if: fromJSON(inputs.start) && runner.os != 'Windows'
          name: Start milvus
          shell: bash
          working-directory: ${{ github.workspace }}
          run: |
              for port in ${{ inputs.ports }}; do
                sudo chown -R $(whoami) $port/
                sudo nohup docker-compose -f $port/docker-compose-$port.yml up -d
              done
              sleep 5
              for port in ${{ inputs.ports }}; do
                if netstat -an | grep -q ".*:$port.*LISTEN"; then
                  echo "Port $port is open."
                else
                  echo "Port $port is not open."
                fi
              done
              docker ps -a

        - name: show logs
          shell: bash
          working-directory: ${{ github.workspace }}
          run: |
            docker ps
            for port in 19530 19531 19532; do
              if netstat -an | grep -q ".*:$port.*LISTEN"; then
                echo "Port $port is open."
              else
                echo "Port $port is not open."
              fi
            done
            docker logs milvus19530-standalone
            docker logs milvus19530-minio
            docker logs milvus19530-etcd

#        - if: fromJSON(inputs.start) && runner.os == 'Windows'
#          name: Start milvus
#          shell: bash
#          working-directory: ${{ github.workspace }}
#          run: |
#            docker ps
#            docker-compose -v
#            for port in ${{ inputs.ports }}; do
#              sudo chown -R $(whoami) $port/
#              docker-compose -f $port/docker-compose-$port.yml up -d
#            done
#            sleep 5
#            for port in ${{ inputs.ports }}; do
#              if ss -tuln | grep -q ":$port "; then
#                echo "Port $port is open."
#              else
#                echo "Port $port is not open."
#              fi
#            done
#            docker ps -a

        - if: fromJSON(inputs.start) && runner.os == 'Windows'
          name: Start milvus on Windows
          shell: bash
          working-directory: ${{ github.workspace }}
          run: |
            pwd
            echo ${{ github.workspace }}
            cp -f docker/milvus/standalone_embed.sh 19530/standalone_embed.sh
            
            docker ps
            bash 19530/standalone_embed.sh start
            docker ps -a
            
            echo "netstat -an"
            netstat -an
            
            echo "lsof -i"
            lsof -i :19530
            
            echo "nc -zv"
            nc -zv 127.0.0.1 19530

#        - if: fromJSON(inputs.start) && runner.os == 'Windows'
#          name: Start milvus on Windows
#          shell: pwsh
#          working-directory: ${{ github.workspace }}
#          run: |
#            $env:Path += ";${{ github.workspace }}"
#            $ports = "${{ inputs.ports }}" -split ' '
#
#            docker-compose -v
#            docker ps
#
#            foreach ($port in $ports){
#              docker-compose -f "$port/docker-compose-$port.yml" up -d
#            }
#
#            Start-Sleep -Seconds 5
#
#            foreach ($port in $ports){
#              if (Get-NetTCPConnection -State Listen | Where-Object { $_.LocalPort -eq $port }) {
#                Write-Host "Port $port is open."
#              } else {
#                Write-Host "Port $port is not open."
#              }
#            }